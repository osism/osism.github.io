"use strict";(self.webpackChunkosism=self.webpackChunkosism||[]).push([[8468],{9663:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"guides/operations-guide/rookify","title":"Use Rookify: Migrate to Rook from Ceph Ansible (Technical Preview)","description":"Rookify is developed to migrate from Ceph-Ansible to Rook in place and without downtime.","source":"@site/docs/guides/operations-guide/rookify.md","sourceDirName":"guides/operations-guide","slug":"/guides/operations-guide/rookify","permalink":"/docs/guides/operations-guide/rookify","draft":false,"unlisted":false,"editUrl":"https://github.com/osism/osism.github.io/tree/main/docs/guides/operations-guide/rookify.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Rookify (technical preview)"},"sidebar":"tutorialSidebar","previous":{"title":"Ceph via Rook (technical preview)","permalink":"/docs/guides/operations-guide/rook"},"next":{"title":"Troubleshooting Guide","permalink":"/docs/guides/troubleshooting-guide/"}}');var t=o(4848),s=o(8453);const r={sidebar_label:"Rookify (technical preview)"},l="Use Rookify: Migrate to Rook from Ceph Ansible (Technical Preview)",d={},a=[{value:"Consider Using a Pickle File",id:"consider-using-a-pickle-file",level:2},{value:"Rookify CLI",id:"rookify-cli",level:2},{value:"Run",id:"run",level:3},{value:"--dry-run",id:"--dry-run",level:3},{value:"--migrate",id:"--migrate",level:3},{value:"--help",id:"--help",level:3},{value:"--show-states",id:"--show-states",level:3},{value:"Debugging and Testing",id:"debugging-and-testing",level:2},{value:"Set logging to debug level",id:"set-logging-to-debug-level",level:3},{value:"Run tests",id:"run-tests",level:3}];function c(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"use-rookify-migrate-to-rook-from-ceph-ansible-technical-preview",children:"Use Rookify: Migrate to Rook from Ceph Ansible (Technical Preview)"})}),"\n",(0,t.jsx)(i.admonition,{type:"warning",children:(0,t.jsxs)(i.p,{children:["Rookify is developed to migrate from Ceph-Ansible to Rook ",(0,t.jsx)(i.em,{children:"in place"})," and ",(0,t.jsx)(i.em,{children:"without downtime"}),".\nNevertheless, it is ",(0,t.jsx)(i.strong,{children:"strongly advised"})," to test Rookify in a controlled environment first, such as the ",(0,t.jsx)(i.a,{href:"https://github.com/osism/testbed",children:"OSISM testbed"}),". Additionally ensure that precautionary backups are made and all other necessary safety measures are in place."]})}),"\n",(0,t.jsxs)(i.p,{children:["For a condensed summary of the information covered here, refer to the ",(0,t.jsx)(i.a,{href:"https://github.com/SovereignCloudStack/rookify",children:"Rookify GitHub repository"}),"."]}),"\n",(0,t.jsx)(i.h2,{id:"consider-using-a-pickle-file",children:"Consider Using a Pickle File"}),"\n",(0,t.jsxs)(i.p,{children:["To track the migration, you can add a pickle file. Specify this option in the ",(0,t.jsx)(i.code,{children:"config.yaml"}),":"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-yaml",metastring:'title="config.example.yaml"',children:"general:\n  machine_pickle_file: data.pickle\n"})}),"\n",(0,t.jsxs)(i.p,{children:["You can then view the migration progress by running ",(0,t.jsx)(i.code,{children:"rookify --show-states"}),"."]}),"\n",(0,t.jsx)(i.admonition,{type:"warning",children:(0,t.jsx)(i.p,{children:"Rookify treats the pickle file as a source of truth for its operations. If you want to start a clean migration, ensure you delete the file first."})}),"\n",(0,t.jsx)(i.h2,{id:"rookify-cli",children:"Rookify CLI"}),"\n",(0,t.jsx)(i.h3,{id:"run",children:"Run"}),"\n",(0,t.jsx)(i.admonition,{type:"note",children:(0,t.jsxs)(i.p,{children:["By default, Rookify runs in preflight mode (",(0,t.jsx)(i.code,{children:"--dry-run"}),")."]})}),"\n",(0,t.jsxs)(i.p,{children:["Rookify runs in preflight mode by default, meaning it performs all preflight checks on the modules and their dependent modules, as configured in ",(0,t.jsx)(i.code,{children:"config.yaml"}),", without executing the migration."]}),"\n",(0,t.jsx)(i.h3,{id:"--dry-run",children:"--dry-run"}),"\n",(0,t.jsx)(i.admonition,{type:"tip",children:(0,t.jsx)(i.p,{children:"Run preflight-mode to ensure Rookify can connect to your target systems."})}),"\n",(0,t.jsxs)(i.p,{children:["Rookify's ",(0,t.jsx)(i.code,{children:"preflight-mode"})," allows you to verify that basic commands and connections to the target systems are functioning correctly. Running ",(0,t.jsx)(i.code,{children:"--dry-run"})," or ",(0,t.jsx)(i.code,{children:"-d"})," mode ensures no migration processes are executed."]}),"\n",(0,t.jsx)(i.h3,{id:"--migrate",children:"--migrate"}),"\n",(0,t.jsx)(i.admonition,{type:"tip",children:(0,t.jsxs)(i.p,{children:["Ensure that you use the correct ",(0,t.jsx)(i.code,{children:"data.pickle"})," file. If you used the pickle file for other setups previously, be sure to delete it."]})}),"\n",(0,t.jsxs)(i.p,{children:["Rookify's ",(0,t.jsx)(i.code,{children:"execution-mode"})," allows you to run the migration. This is a point of no (easy) return. Be sure to check all your configurations. Run ",(0,t.jsx)(i.code,{children:"--migrate"})," or ",(0,t.jsx)(i.code,{children:"-m"})," to execute the migration process."]}),"\n",(0,t.jsx)(i.h3,{id:"--help",children:"--help"}),"\n",(0,t.jsxs)(i.p,{children:["Run ",(0,t.jsx)(i.code,{children:"rookify --help"})," to view the various CLI options available."]}),"\n",(0,t.jsx)(i.h3,{id:"--show-states",children:"--show-states"}),"\n",(0,t.jsxs)(i.p,{children:["Run ",(0,t.jsx)(i.code,{children:"--show-states"})," or ",(0,t.jsx)(i.code,{children:"-s"})," to display the status of your migration process. Note that if you specified  a pickle file, Rookify will use it to determine the state of migration."]}),"\n",(0,t.jsx)(i.h2,{id:"debugging-and-testing",children:"Debugging and Testing"}),"\n",(0,t.jsxs)(i.p,{children:["If you encounter issues with Rookify, you can start by setting the logging level to ",(0,t.jsx)(i.code,{children:"DEBUG"}),".\nIf further troubleshooting is needed, you can run the tests included in the Rookify code."]}),"\n",(0,t.jsx)(i.h3,{id:"set-logging-to-debug-level",children:"Set logging to debug level"}),"\n",(0,t.jsxs)(i.p,{children:["Edit the ",(0,t.jsx)(i.code,{children:"config.yaml"}),' and set the logging level to "DEBUG":']}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-yaml",metastring:'title="config.example.yaml"',children:'logging:\n  level: DEBUG\n  format:\n    time: "%Y-%m-%d %H:%M.%S" # other example: "iso"\n    renderer: console # or: json\n'})}),"\n",(0,t.jsxs)(i.p,{children:["You can also customize other formatting options, as shown in the comments. For more details, refer to the ",(0,t.jsx)(i.a,{href:"https://www.structlog.org/en/stable/standard-library.html",children:"structlog"}),"."]}),"\n",(0,t.jsx)(i.h3,{id:"run-tests",children:"Run tests"}),"\n",(0,t.jsx)(i.p,{children:"To run tests on Rookify, ensure you have access to the Rookify code on your system. Then:"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["Run ",(0,t.jsx)(i.code,{children:"make run-tests-locally"})," from the working directory of the Rookify repository. If you prefer a containerized setup, use ",(0,t.jsx)(i.code,{children:"make run-tests"}),"."]}),"\n",(0,t.jsxs)(i.li,{children:["Alternatively, run ",(0,t.jsx)(i.code,{children:".venv/bin/python -m pytest"})," from the virtual environment of your installation."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,i,o)=>{o.d(i,{R:()=>r,x:()=>l});var n=o(6540);const t={},s=n.createContext(t);function r(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);