"use strict";(self.webpackChunkosism=self.webpackChunkosism||[]).push([[2018],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),g=o,f=u["".concat(l,".").concat(g)]||u[g]||p[g]||r;return n?i.createElement(f,a(a({ref:t},c),{},{components:n})):i.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var d=2;d<r;d++)a[d]=n[d];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}g.displayName="MDXCreateElement"},184:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=n(7462),o=(n(7294),n(3905));const r={sidebar_label:"Seed",sidebar_position:10},a="Seed",s={unversionedId:"guides/deploy-guide/seed",id:"guides/deploy-guide/seed",title:"Seed",description:"The seed node is used once for the initial bootstrap of the manager node. It is sufficient",source:"@site/docs/guides/deploy-guide/seed.md",sourceDirName:"guides/deploy-guide",slug:"/guides/deploy-guide/seed",permalink:"/docs/guides/deploy-guide/seed",draft:!1,editUrl:"https://github.com/osism/osism.github.io/tree/main/docs/guides/deploy-guide/seed.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_label:"Seed",sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Deploy Guide",permalink:"/docs/guides/deploy-guide/"},next:{title:"Manager",permalink:"/docs/guides/deploy-guide/manager"}},l={},d=[{value:"Install required packages",id:"install-required-packages",level:2},{value:"Get a copy of the configuration repository",id:"get-a-copy-of-the-configuration-repository",level:2}],c={toc:d},u="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"seed"},"Seed"),(0,o.kt)("p",null,"The seed node is used once for the initial bootstrap of the manager node. It is sufficient\nto use the local workstation. It doesn't have to be a dedicated system. The seed node is\nno longer needed in the further process. The seed node must be able to reach the manager\nnode via SSH."),(0,o.kt)("p",null,"The use of Linux on the seed node is recommended. Other operating systems should also\nwork without problems."),(0,o.kt)("h2",{id:"install-required-packages"},"Install required packages"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo apt-get install git python3-pip python3-virtualenv sshpass\n")),(0,o.kt)("h2",{id:"get-a-copy-of-the-configuration-repository"},"Get a copy of the configuration repository"),(0,o.kt)("p",null,"Each environment managed with OSISM is based on a configuration repository. This was\npreviously created with Cookiecutter and the cfg-cookiecutter repository."),(0,o.kt)("p",null,"A configuration repository is stored on a Git server (e.g. GitHub, Gitlab, ...). The\nconfiguration repository is individual for each environment and is therefore not provided\nby us."),(0,o.kt)("p",null,"The configuration repository to be used must be available on the seed node. In the following\nexample, replace ",(0,o.kt)("inlineCode",{parentName:"p"},"YOUR_ORG")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"YOUR_NEW_CONFIGURATION_REPOSITORY")," accordingly."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git clone ssh://git@github.com:YOUR_ORG/YOUR_NEW_CONFIGURATION_REPOSITORY.git\n")),(0,o.kt)("p",null,"Examples:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The repository is located in the ",(0,o.kt)("inlineCode",{parentName:"li"},"regiocloud")," organisation on GitHub, has the name\nconfiguration and can be accessed via SSH: ",(0,o.kt)("inlineCode",{parentName:"li"},"ssh://git@github.com:regiocloud/configuration.git")),(0,o.kt)("li",{parentName:"ul"},"The repository is located in the ",(0,o.kt)("inlineCode",{parentName:"li"},"regiocloud")," organisation on Gitlab, has the name configuration\nand can be accessed via SSH: ",(0,o.kt)("inlineCode",{parentName:"li"},"ssh://git@gitlab.com:regiocloud/configuration.git")),(0,o.kt)("li",{parentName:"ul"},"The repository is located in the ",(0,o.kt)("inlineCode",{parentName:"li"},"regiocloud")," organisation on an internal Gitlab, has the name\nconfiguration and can be accessed via SSH: ",(0,o.kt)("inlineCode",{parentName:"li"},"ssh://git@git.services.osism.tech:regiocloud/configuration.git"))),(0,o.kt)("p",null,"If necessary, the configuration SSH key can be used for the initial transfer of the repository."),(0,o.kt)("p",null,"For this, the following content is added in ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.ssh/config")," and the SSH privte key is stored in\n",(0,o.kt)("inlineCode",{parentName:"p"},"~/.ssh/id_rsa.configuration"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Host github.com\n  HostName github.com\n  User git\n  Port 22\n  IdentityFile ~/.ssh/id_rsa.configuration\n")))}p.isMDXComponent=!0}}]);