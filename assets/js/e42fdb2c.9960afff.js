"use strict";(self.webpackChunkosism=self.webpackChunkosism||[]).push([[2614],{7555:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=a(5893),t=a(3905);const o={sidebar_label:"Flavor Manager",sidebar_position:51},i="Flavor Manager",s={id:"guides/operations-guide/openstack/flavor-manager",title:"Flavor Manager",description:"Overview",source:"@site/docs/guides/operations-guide/openstack/flavor-manager.md",sourceDirName:"guides/operations-guide/openstack",slug:"/guides/operations-guide/openstack/flavor-manager",permalink:"/docs/guides/operations-guide/openstack/flavor-manager",draft:!1,unlisted:!1,editUrl:"https://github.com/osism/osism.github.io/tree/main/docs/guides/operations-guide/openstack/flavor-manager.md",tags:[],version:"current",sidebarPosition:51,frontMatter:{sidebar_label:"Flavor Manager",sidebar_position:51},sidebar:"tutorialSidebar",previous:{title:"Image Manager",permalink:"/docs/guides/operations-guide/openstack/image-manager"},next:{title:"Resource Manager",permalink:"/docs/guides/operations-guide/openstack/resource-manager"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Flavor definitions",id:"flavor-definitions",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"flavor-manager",children:"Flavor Manager"}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The OpenStack Flavor Manager manages the creation, modification, and removal of flavors within an OpenStack environment.\nThe OpenStack Flavor Manager operates as a facilitator that orchestrates compute flavors in alignment\nwith the ",(0,r.jsx)(n.a,{href:"https://docs.scs.community/standards/scs-0100-v3-flavor-naming",children:"SCS Flavor Naming Standard"}),"\nby utilizing YAML files provided by the SCS project."]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(n.p,{children:["Install the ",(0,r.jsx)(n.code,{children:"openstack-flavor-manager"})," package with pip."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip3 install openstack-flavor-manager\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Or clone the repository ",(0,r.jsx)(n.a,{href:"https://github.com/osism/openstack-flavor-manager",children:"osism/openstack-flavor-manager"}),"\nand use the OpenStack Flavor Manager from source with tox."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"tox -- --help\n"})}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(n.p,{children:["There must be a ",(0,r.jsx)(n.code,{children:"clouds.yml"})," and a ",(0,r.jsx)(n.code,{children:"secure.yml"})," file in the directory where the OpenStack Flavor Manager\nwill be executed. The cloud profile to be used can be specified via the optional ",(0,r.jsx)(n.code,{children:"--cloud"})," parameter.\nBy default the cloud profile with the name ",(0,r.jsx)(n.code,{children:"admin"})," is used. It must be possible to create and delete\nflavors with the used cloud credentials."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"$ openstack-flavor-manager --help\n\n Usage: openstack-flavor-manager [OPTIONS]\n\n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --name               TEXT  Name of flavor definitions. [default: scs]                        \u2502\n\u2502 --debug                    Enable debug logging.                                             \u2502\n\u2502 --cloud              TEXT  Cloud name in clouds.yaml. [default: admin]                       \u2502\n\u2502 --recommended              Create recommended flavors.                                       \u2502\n\u2502 --help                     Show this message and exit.                                       \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n"})}),"\n",(0,r.jsx)(n.p,{children:"To create the mandatory flavors by the SCS Flavor Naming Standard, you run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ openstack-flavor-manager\n"})}),"\n",(0,r.jsx)(n.p,{children:"To create the recommended flavors by the SCS Flavor Naming Standard, you run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ openstack-flavor-manager --recommended\n"})}),"\n",(0,r.jsx)(n.p,{children:"The output should look like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"2023-09-20 13:03:14 | INFO     | Flavor 'SCS-1V-4' created.\n2023-09-20 13:03:14 | INFO     | Flavor 'SCS-2V-8' created.\n2023-09-20 13:03:14 | INFO     | Flavor 'SCS-4V-16' created.\n2023-09-20 13:03:14 | INFO     | Flavor 'SCS-8V-32' created.\n...\n"})}),"\n",(0,r.jsx)(n.p,{children:"All recommended flavors are now be available in your OpenStack environment.\nCheck yourself by running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"openstack --os-cloud admin flavor list\n"})}),"\n",(0,r.jsx)(n.h2,{id:"flavor-definitions",children:"Flavor definitions"}),"\n",(0,r.jsxs)(n.p,{children:["There are two flavor definitions available by default. One for\n",(0,r.jsx)(n.a,{href:"https://raw.githubusercontent.com/SovereignCloudStack/standards/main/Tests/iaas/SCS-Spec.MandatoryFlavors.verbose.yaml",children:"SCS"}),"\nand one for ",(0,r.jsx)(n.a,{href:"https://raw.githubusercontent.com/osism/openstack-flavor-manager/main/flavors.yaml",children:"OSISM"}),".\nEach definition has its own set of mandatory and recommended flavors."]}),"\n",(0,r.jsxs)(n.p,{children:["To run the OpenStack Flavor Manager with a specific definition, either ",(0,r.jsx)(n.code,{children:"scs"})," or ",(0,r.jsx)(n.code,{children:"osism"}),",\nuse the optional ",(0,r.jsx)(n.code,{children:"--name"})," parameter. By default the ",(0,r.jsx)(n.a,{href:"https://docs.scs.community/standards/scs-0100-v3-flavor-naming",children:"SCS Flavor Naming Standard"}),"\ndefinition will be used."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"$ openstack-flavor-manager --name osism\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},3905:(e,n,a)=>{a.d(n,{ah:()=>c});var r=a(7294);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var l=r.createContext({}),c=function(e){var n=r.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=c(a),u=t,m=h["".concat(l,".").concat(u)]||h[u]||d[u]||o;return a?r.createElement(m,i(i({ref:n},p),{},{components:a})):r.createElement(m,i({ref:n},p))}));p.displayName="MDXCreateElement"}}]);