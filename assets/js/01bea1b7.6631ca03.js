"use strict";(self.webpackChunkosism=self.webpackChunkosism||[]).push([[8433],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},h="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=c(t),m=r,u=h["".concat(l,".").concat(m)]||h[m]||d[m]||o;return t?a.createElement(u,i(i({ref:n},p),{},{components:t})):a.createElement(u,i({ref:n},p))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[h]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6425:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_label:"OpenStack",sidebar_position:30},i="OpenStack",s={unversionedId:"guides/configuration-guides/openstack/index",id:"guides/configuration-guides/openstack/index",title:"OpenStack",description:"How does the configuration get into services?",source:"@site/docs/guides/configuration-guides/openstack/index.md",sourceDirName:"guides/configuration-guides/openstack",slug:"/guides/configuration-guides/openstack/",permalink:"/docs/guides/configuration-guides/openstack/",draft:!1,editUrl:"https://github.com/osism/osism.github.io/tree/main/docs/guides/configuration-guides/openstack/index.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_label:"OpenStack",sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Services",permalink:"/docs/guides/configuration-guides/services/"},next:{title:"Keystone",permalink:"/docs/guides/configuration-guides/openstack/keystone"}},l={},c=[{value:"How does the configuration get into services?",id:"how-does-the-configuration-get-into-services",level:2}],p={toc:c},h="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(h,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"openstack"},"OpenStack"),(0,r.kt)("h2",{id:"how-does-the-configuration-get-into-services"},"How does the configuration get into services?"),(0,r.kt)("p",null,"It is explained with example of OpenSearch Service how the configuration for OpenSearch\nis created and gets into the container."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The task ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/openstack/kolla-ansible/blob/master/ansible/roles/opensearch/tasks/config.yml"},"Copying over opensearch service config file"),"\nmerges the individual sources of the files."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Copying over opensearch service config file task"',title:'"Copying',over:!0,opensearch:!0,service:!0,config:!0,file:!0,'task"':!0},'- name: Copying over opensearch service config file\n  merge_yaml:\n    sources:\n      # highlight-start\n- "{{ role_path }}/templates/opensearch.yml.j2"\n- "{{ node_custom_config }}/opensearch.yml"\n- "{{ node_custom_config }}/opensearch/opensearch.yml"\n- "{{ node_custom_config }}/opensearch/{{ inventory_hostname }}/opensearch.yml"\n      # highlight-end\n    dest: "{{ node_config_directory }}/opensearch/opensearch.yml"\n    mode: "0660"\n  become: true\n  when:\n    - inventory_hostname in groups[\'opensearch\']\n    - opensearch_services[\'opensearch\'].enabled | bool\n  notify:\n    - Restart opensearch container\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"As a basis a template ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/openstack/kolla-ansible/blob/master/ansible/roles/opensearch/templates/opensearch.yml.j2"},"opensearch.yml.j2"),"\nis used which is part of the OpenSearch service role."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="opensearch.yml.j2 template"',title:'"opensearch.yml.j2','template"':!0},"{% set num_nodes = groups['opensearch'] | length %}\n{% set recover_after_nodes = (num_nodes * 2 / 3) | round(0, 'floor') | int if num_nodes > 1 else 1 %}\nplugins.security.disabled: \"true\"\n\nnode.name: \"{{ 'api' | kolla_address | put_address_in_context('url') }}\"\nnetwork.host: \"{{ 'api' | kolla_address | put_address_in_context('url') }}\"\n\ncluster.name: \"{{ opensearch_cluster_name }}\"\ncluster.initial_master_nodes: [{% for host in groups['opensearch'] %}\"{{ 'api' | kolla_address(host) }}\"{% if not loop.last %},{% endif %}{% endfor %}]\nnode.master: true\nnode.data: true\ndiscovery.seed_hosts: [{% for host in groups['opensearch'] %}\"{{ 'api' | kolla_address(host) | put_address_in_context('url') }}\"{% if not loop.last %},{% endif %}{% endfor %}]\n\nhttp.port: {{ opensearch_port }}\ngateway.expected_nodes: {{ num_nodes }}\ngateway.recover_after_time: \"5m\"\ngateway.recover_after_nodes: {{ recover_after_nodes }}\npath.data: \"/var/lib/opensearch/data\"\npath.logs: \"/var/log/kolla/opensearch\"\nindices.fielddata.cache.size: 40%\naction.auto_create_index: \"true\"\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For OpenSearch, overlay files can additionally be stored in 3 places in the configuration repository."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"environments/kolla/files/overlays/opensearch.yml")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"environments/kolla/files/overlays/opensearch/opensearch.yml")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"environments/kolla/files/overlays/opensearch/{{ inventory_hostname }}/opensearch.yml"))),(0,r.kt)("p",{parentName:"li"},"When merging files, the last file found has the most weight. If there is a parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"node.master: true"),"\nin the service role template ",(0,r.kt)("inlineCode",{parentName:"p"},"opensearch.yml.j2")," of the OpenSearch service and you set e.g.\n",(0,r.kt)("inlineCode",{parentName:"p"},"node.master: false")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"environments/kolla/files/overlays/opensearch.yml")," then accordingly in the finished ",(0,r.kt)("inlineCode",{parentName:"p"},"opensearch.yml"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"node.master: false")," is used.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"After the merge the task ",(0,r.kt)("inlineCode",{parentName:"p"},"Copying over opensearch service config file")," copies the content into the\nconfiguration directory ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/kolla/opensearch")," of the service."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="/etc/kolla/opensearch/opensearch.yml"',title:'"/etc/kolla/opensearch/opensearch.yml"'},"action.auto_create_index: 'true'\ncluster.initial_master_nodes:\n- 192.168.16.10\ncluster.name: kolla_logging\ndiscovery.seed_hosts:\n- 192.168.16.10\ngateway.expected_nodes: 1\ngateway.recover_after_nodes: 1\ngateway.recover_after_time: 5m\nhttp.port: 9200\nindices.fielddata.cache.size: 40%\nnetwork.host: 192.168.16.10\nnode.data: true\nnode.master: true\nnode.name: 192.168.16.10\npath.data: /var/lib/opensearch/data\npath.logs: /var/log/kolla/opensearch\nplugins.security.disabled: 'true'\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The configuration directory ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/kolla/opensearch")," is mounted in each container of the OpenSearch service\nto ",(0,r.kt)("inlineCode",{parentName:"p"},"/var/lib/kolla/config_files"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Output of docker inspect opensearch"',title:'"Output',of:!0,docker:!0,inspect:!0,'opensearch"':!0},'"Mounts": [\n    {\n        "Type": "bind",\n        // highlight-start\n        "Source": "/etc/kolla/opensearch",\n        "Destination": "/var/lib/kolla/config_files",\n        // highlight-end\n        "Mode": "rw",\n        "RW": true,\n        "Propagation": "rprivate"\n    },\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Entrypoint of a service is always ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/openstack/kolla/blob/master/docker/base/start.sh"},"kolla_start"),".\nThis script calls a script ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/openstack/kolla/blob/master/docker/base/set_configs.py"},"set_configs.py"),".\nThis script takes care of copying files from ",(0,r.kt)("inlineCode",{parentName:"p"},"/var/lib/kolla/config_files")," to the right place inside the container.\nFor this purpose, the container has a\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/openstack/kolla-ansible/blob/master/ansible/roles/opensearch/templates/opensearch.json.j2"},"config.json"),"\nin which the individual actions are configured."),(0,r.kt)("p",{parentName:"li"},"The file ",(0,r.kt)("inlineCode",{parentName:"p"},"/var/lib/kolla/config_files/opensearch.yml")," is copied to ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/opensearch/opensearch.yml"),"."),(0,r.kt)("p",{parentName:"li"},"The permissions of ",(0,r.kt)("inlineCode",{parentName:"p"},"/var/lib/opensearch")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"/var/log/kolla/opensearch")," are set accordingly."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="/etc/kolla/opensearch/config.json"',title:'"/etc/kolla/opensearch/config.json"'},'{\n    "command": "/usr/share/opensearch/bin/opensearch",\n    "config_files": [\n        {\n            // highlight-start\n            "source": "/var/lib/kolla/config_files/opensearch.yml",\n            "dest": "/etc/opensearch/opensearch.yml",\n            "owner": "opensearch",\n            "perm": "0600"\n            // highlight-end\n        }\n    ],\n    "permissions": [\n        {\n            // highlight-start\n            "path": "/var/lib/opensearch",\n            "owner": "opensearch:opensearch",\n            "recurse": true\n            // highlight-end\n        },\n        {\n            // highlight-start\n            "path": "/var/log/kolla/opensearch",\n            "owner": "opensearch:opensearch",\n            "recurse": true\n            // highlight-end\n        }\n    ]\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"config.json")," of the service is also defined the command which will be executed after finishing the preparations.\nIn the case of OpenSearch this is ",(0,r.kt)("inlineCode",{parentName:"p"},"/usr/share/opensearch/bin/opensearch"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="/etc/kolla/opensearch/config.json"',title:'"/etc/kolla/opensearch/config.json"'},'{\n    // highlight-start\n    "command": "/usr/share/opensearch/bin/opensearch",\n    // highlight-end\n    "config_files": [\n        {\n            "source": "/var/lib/kolla/config_files/opensearch.yml",\n            "dest": "/etc/opensearch/opensearch.yml",\n            "owner": "opensearch",\n            "perm": "0600"\n        }\n    ],\n    "permissions": [\n        {\n            "path": "/var/lib/opensearch",\n            "owner": "opensearch:opensearch",\n            "recurse": true\n        },\n        {\n            "path": "/var/log/kolla/opensearch",\n            "owner": "opensearch:opensearch",\n            "recurse": true\n        }\n    ]\n}\n')))))}d.isMDXComponent=!0}}]);