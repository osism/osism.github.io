"use strict";(self.webpackChunkosism=self.webpackChunkosism||[]).push([[2614],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>f});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),p=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},c=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?t.createElement(f,i(i({ref:a},c),{},{components:n})):t.createElement(f,i({ref:a},c))}));function f(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6524:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var t=n(7462),r=(n(7294),n(3905));const o={sidebar_label:"Flavor Manager",sidebar_position:51},i="Flavor Manager",l={unversionedId:"guides/operations-guide/openstack/flavor-manager",id:"guides/operations-guide/openstack/flavor-manager",title:"Flavor Manager",description:"Overview",source:"@site/docs/guides/operations-guide/openstack/flavor-manager.md",sourceDirName:"guides/operations-guide/openstack",slug:"/guides/operations-guide/openstack/flavor-manager",permalink:"/docs/guides/operations-guide/openstack/flavor-manager",draft:!1,editUrl:"https://github.com/osism/osism.github.io/tree/main/docs/guides/operations-guide/openstack/flavor-manager.md",tags:[],version:"current",sidebarPosition:51,frontMatter:{sidebar_label:"Flavor Manager",sidebar_position:51},sidebar:"tutorialSidebar",previous:{title:"Image Manager",permalink:"/docs/guides/operations-guide/openstack/image-manager"},next:{title:"Resource Manager",permalink:"/docs/guides/operations-guide/openstack/resource-manager"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Flavor definitions",id:"flavor-definitions",level:2}],c={toc:p},d="wrapper";function u(e){let{components:a,...n}=e;return(0,r.kt)(d,(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"flavor-manager"},"Flavor Manager"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The OpenStack Flavor Manager manages the creation, modification, and removal of flavors within an OpenStack environment.\nThe OpenStack Flavor Manager operates as a facilitator that orchestrates compute flavors in alignment\nwith the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.scs.community/standards/scs-0100-v3-flavor-naming"},"SCS Flavor Naming Standard"),"\nby utilizing YAML files provided by the SCS project."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Install the ",(0,r.kt)("inlineCode",{parentName:"p"},"openstack-flavor-manager")," package with pip."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip3 install openstack-flavor-manager\n")),(0,r.kt)("p",null,"Or clone the repository ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/osism/openstack-flavor-manager"},"osism/openstack-flavor-manager"),"\nand use the OpenStack Flavor Manager from source with tox."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tox -- --help\n")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"There must be a ",(0,r.kt)("inlineCode",{parentName:"p"},"clouds.yml")," and a ",(0,r.kt)("inlineCode",{parentName:"p"},"secure.yml")," file in the directory where the OpenStack Flavor Manager\nwill be executed. The cloud profile to be used can be specified via the optional ",(0,r.kt)("inlineCode",{parentName:"p"},"--cloud")," parameter.\nBy default the cloud profile with the name ",(0,r.kt)("inlineCode",{parentName:"p"},"admin")," is used. It must be possible to create and delete\nflavors with the used cloud credentials."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ openstack-flavor-manager --help\n\n Usage: openstack-flavor-manager [OPTIONS]\n\n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --name               TEXT  Name of flavor definitions. [default: scs]                        \u2502\n\u2502 --debug                    Enable debug logging.                                             \u2502\n\u2502 --cloud              TEXT  Cloud name in clouds.yaml. [default: admin]                       \u2502\n\u2502 --recommended              Create recommended flavors.                                       \u2502\n\u2502 --help                     Show this message and exit.                                       \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n")),(0,r.kt)("p",null,"To create the mandatory flavors by the SCS Flavor Naming Standard, you run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ openstack-flavor-manager\n")),(0,r.kt)("p",null,"To create the recommended flavors by the SCS Flavor Naming Standard, you run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ openstack-flavor-manager --recommended\n")),(0,r.kt)("p",null,"The output should look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"2023-09-20 13:03:14 | INFO     | Flavor 'SCS-1V-4' created.\n2023-09-20 13:03:14 | INFO     | Flavor 'SCS-2V-8' created.\n2023-09-20 13:03:14 | INFO     | Flavor 'SCS-4V-16' created.\n2023-09-20 13:03:14 | INFO     | Flavor 'SCS-8V-32' created.\n...\n")),(0,r.kt)("p",null,"All recommended flavors are now be available in your OpenStack environment.\nCheck yourself by running: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openstack --os-cloud admin flavor list\n")),(0,r.kt)("h2",{id:"flavor-definitions"},"Flavor definitions"),(0,r.kt)("p",null,"There are two flavor definitions available by default. One for\n",(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/SovereignCloudStack/standards/main/Tests/iaas/SCS-Spec.MandatoryFlavors.verbose.yaml"},"SCS"),"\nand one for ",(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/osism/openstack-flavor-manager/main/flavors.yaml"},"OSISM"),".\nEach definition has its own set of mandatory and recommended flavors."),(0,r.kt)("p",null,"To run the OpenStack Flavor Manager with a specific definition, either ",(0,r.kt)("inlineCode",{parentName:"p"},"scs")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"osism"),",\nuse the optional ",(0,r.kt)("inlineCode",{parentName:"p"},"--name")," parameter. By default the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.scs.community/standards/scs-0100-v3-flavor-naming"},"SCS Flavor Naming Standard"),"\ndefinition will be used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ openstack-flavor-manager --name osism\n")))}u.isMDXComponent=!0}}]);