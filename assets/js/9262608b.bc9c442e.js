"use strict";(self.webpackChunkosism=self.webpackChunkosism||[]).push([[1410],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>v});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=n.createContext({}),d=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=d(e.components);return n.createElement(c.Provider,{value:r},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),l=d(t),m=i,v=l["".concat(c,".").concat(m)]||l[m]||p[m]||s;return t?n.createElement(v,o(o({ref:r},u),{},{components:t})):n.createElement(v,o({ref:r},u))}));function v(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var s=t.length,o=new Array(s);o[0]=m;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a[l]="string"==typeof e?e:i,o[1]=a;for(var d=2;d<s;d++)o[d]=t[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3628:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var n=t(7462),i=(t(7294),t(3905));const s={sidebar_label:"Services"},o="Services",a={unversionedId:"guides/configuration-guides/commons/services",id:"guides/configuration-guides/commons/services",title:"Services",description:"With the osism.commons.services role, it is possible to manage services on a node",source:"@site/docs/guides/configuration-guides/commons/services.md",sourceDirName:"guides/configuration-guides/commons",slug:"/guides/configuration-guides/commons/services",permalink:"/docs/guides/configuration-guides/commons/services",draft:!1,editUrl:"https://github.com/osism/osism.github.io/tree/main/docs/guides/configuration-guides/commons/services.md",tags:[],version:"current",frontMatter:{sidebar_label:"Services"},sidebar:"tutorialSidebar",previous:{title:"Packages",permalink:"/docs/guides/configuration-guides/commons/packages"},next:{title:"SSH Config",permalink:"/docs/guides/configuration-guides/commons/sshconfig"}},c={},d=[{value:"Start and enable required services",id:"start-and-enable-required-services",level:2},{value:"Note on services that should be deactivated",id:"note-on-services-that-should-be-deactivated",level:2}],u={toc:d},l="wrapper";function p(e){let{components:r,...t}=e;return(0,i.kt)(l,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"services"},"Services"),(0,i.kt)("p",null,"With the ",(0,i.kt)("inlineCode",{parentName:"p"},"osism.commons.services")," role, it is possible to manage services on a node\nin a general form. This allows you to either activate any services or indicate that\nspecific services are running and should be deactivated."),(0,i.kt)("h2",{id:"start-and-enable-required-services"},"Start and enable required services"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'services_required_default:\n  - cron\nservices_required_extra: []\nservices_required: "{{ services_required_default + services_required_extra }}"\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"services_required")," should not be overwritten. Use ",(0,i.kt)("inlineCode",{parentName:"p"},"services_required_extra")," to add extra services.")),(0,i.kt)("h2",{id:"note-on-services-that-should-be-deactivated"},"Note on services that should be deactivated"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'services_warning_default:\n  - nscd\nservices_warning_extra: []\nservices_warning: "{{ services_warning_default + services_warning_extra }}"\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"services_warning")," should not be overwritten. Use ",(0,i.kt)("inlineCode",{parentName:"p"},"services_warning_extra")," to add extra services.")))}p.isMDXComponent=!0}}]);