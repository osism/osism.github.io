"use strict";(self.webpackChunkosism=self.webpackChunkosism||[]).push([[5961],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var i=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var r=i.createContext({}),u=function(e){var t=i.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=u(e.components);return i.createElement(r.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,r=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=u(n),p=l,h=c["".concat(r,".").concat(p)]||c[p]||m[p]||o;return n?i.createElement(h,a(a({ref:t},d),{},{components:n})):i.createElement(h,a({ref:t},d))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,a=new Array(o);a[0]=p;var s={};for(var r in t)hasOwnProperty.call(t,r)&&(s[r]=t[r]);s.originalType=e,s[c]="string"==typeof e?e:l,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7246:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var i=n(7462),l=(n(7294),n(3905));const o={sidebar_label:"Style Guide",sidebar_position:100},a="Style Guide",s={unversionedId:"guides/other-guides/style-guide",id:"guides/other-guides/style-guide",title:"Style Guide",description:"Ansible",source:"@site/docs/guides/other-guides/style-guide.md",sourceDirName:"guides/other-guides",slug:"/guides/other-guides/style-guide",permalink:"/docs/guides/other-guides/style-guide",draft:!1,editUrl:"https://github.com/osism/osism.github.io/tree/main/docs/guides/other-guides/style-guide.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_label:"Style Guide",sidebar_position:100},sidebar:"tutorialSidebar",previous:{title:"Zuul Ci",permalink:"/docs/guides/other-guides/developer-guide/zuul-ci"},next:{title:"Zuul CI",permalink:"/docs/guides/other-guides/zuul"}},r={},u=[{value:"Ansible",id:"ansible",level:2},{value:"Task names",id:"task-names",level:3},{value:"<code>become</code> directive",id:"become-directive",level:3},{value:"<code>when</code> directive",id:"when-directive",level:3},{value:"Lists as defaults",id:"lists-as-defaults",level:3},{value:"Containerfiles",id:"containerfiles",level:2},{value:"Commit messages",id:"commit-messages",level:2},{value:"Python",id:"python",level:2},{value:"Installation",id:"installation",level:3},{value:"Formatting a Single File",id:"formatting-a-single-file",level:3},{value:"Formatting Multiple Files and/or directories",id:"formatting-multiple-files-andor-directories",level:3},{value:"Formatting an Entire Project",id:"formatting-an-entire-project",level:3},{value:"Check Mode (Dry Run)",id:"check-mode-dry-run",level:3},{value:"Excluding Files or Directories",id:"excluding-files-or-directories",level:3},{value:"Integration with Code Editors",id:"integration-with-code-editors",level:3},{value:"Example of failed python-black Zuul job",id:"example-of-failed-python-black-zuul-job",level:3}],d={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(c,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"style-guide"},"Style Guide"),(0,l.kt)("h2",{id:"ansible"},"Ansible"),(0,l.kt)("p",null,"We implement all the default rules of Ansible Lint. All default rules can be found in the\nAnsible Lint documentation: ",(0,l.kt)("a",{parentName:"p",href:"https://ansible-lint.readthedocs.io/en/latest/default_rules/"},"https://ansible-lint.readthedocs.io/en/latest/default_rules/")),(0,l.kt)("h3",{id:"task-names"},"Task names"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Tasks must always have names. The only exception allowed is for forked playbooks."),(0,l.kt)("li",{parentName:"ul"},"A name never starts with a small letter"),(0,l.kt)("li",{parentName:"ul"},"Names are written in present tense"),(0,l.kt)("li",{parentName:"ul"},"No punctuation is used in names")),(0,l.kt)("h3",{id:"become-directive"},(0,l.kt)("inlineCode",{parentName:"h3"},"become")," directive"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"become")," directive is only set when needed and is always set explicitly for each task that needs it."),(0,l.kt)("p",null,"Blocks, roles, or playbooks are never executed in a privileged mode."),(0,l.kt)("p",null,"We always insert the ",(0,l.kt)("inlineCode",{parentName:"p"},"become")," directive between the name of a task and the task itself. This also applies\nto related directives like ",(0,l.kt)("inlineCode",{parentName:"p"},"become_user"),"  or ",(0,l.kt)("inlineCode",{parentName:"p"},"become_flags"),". This is for better visibility if a task is\nprivileged or not."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'- name: Copy hddtemp configuration file\n  become: true\n  ansible.builtin.copy:\n    src: "{{ ansible_os_family }}/hddtemp"\n    dest: "{{ hddtemp_conf_file }}"\n    owner: root\n    group: root\n    mode: 0644\n  notify: Restart hddtemp service\n')),(0,l.kt)("h3",{id:"when-directive"},(0,l.kt)("inlineCode",{parentName:"h3"},"when")," directive"),(0,l.kt)("p",null,"If you need to use the ",(0,l.kt)("inlineCode",{parentName:"p"},"when")," directive add this at the end-section from the task where it is needed. This\nmakes the code easier to understand for others."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'- name: "Archive existing {{ resolvconf_file }} file"\n  become: true\n  ansible.posix.synchronize:\n    src: "/etc/resolv.conf"\n    dest: "/etc/resolv.conf.{{ ansible_date_time.date }}"\n    archive: true\n  delegate_to: "{{ inventory_hostname }}"\n  when: stat_resolvconf_file.stat.islnk is defined and not stat_resolvconf_file.stat.islnk\n')),(0,l.kt)("h3",{id:"lists-as-defaults"},"Lists as defaults"),(0,l.kt)("p",null,"Defaults that provide a list are always defined as in the following example."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"docker_hosts_defaults")," sets the defaults in the role. Overriding is only possible with the ",(0,l.kt)("inlineCode",{parentName:"p"},"defaults")," repository."),(0,l.kt)("p",null,"In the configuration repository, ",(0,l.kt)("inlineCode",{parentName:"p"},"docker_hosts_extra")," is then used to add additional items to the list."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"docker_hosts")," itself is never modified from the outside."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'docker_hosts_defaults:\n  - "unix:///var/run/docker.sock"\ndocker_hosts_extra: []\ndocker_hosts: "{{ docker_hosts_defaults + docker_hosts_extra }}"\n')),(0,l.kt)("h2",{id:"containerfiles"},"Containerfiles"),(0,l.kt)("h2",{id:"commit-messages"},"Commit messages"),(0,l.kt)("h2",{id:"python"},"Python"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/psf/black"},"Black")," is a popular Python code formatter that automatically\nformats your code to adhere to a consistent style. We use it to automatically format the\nsyntax of Python. A job is running in the CI that checks, if Black has been applied. Therefore,\nformat the files with Black accordingly in advance."),(0,l.kt)("h3",{id:"installation"},"Installation"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pip install black")),(0,l.kt)("h3",{id:"formatting-a-single-file"},"Formatting a Single File"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"black myfile.py")),(0,l.kt)("h3",{id:"formatting-multiple-files-andor-directories"},"Formatting Multiple Files and/or directories"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"black file1.py file2.py dir/")),(0,l.kt)("h3",{id:"formatting-an-entire-project"},"Formatting an Entire Project"),(0,l.kt)("p",null,"This command will format all Python files in the current directory and its subdirectories:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"black .")),(0,l.kt)("h3",{id:"check-mode-dry-run"},"Check Mode (Dry Run)"),(0,l.kt)("p",null,"Running Black with the ",(0,l.kt)("inlineCode",{parentName:"p"},"--check")," option performs a dry run and reports files that would be\nchanged without actually modifying them:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"black --check myfile.py")),(0,l.kt)("h3",{id:"excluding-files-or-directories"},"Excluding Files or Directories"),(0,l.kt)("p",null,"You can exclude files or directories from formatting using the ",(0,l.kt)("inlineCode",{parentName:"p"},"--exclude")," option:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"black --exclude=dir_to_exclude/ .")),(0,l.kt)("h3",{id:"integration-with-code-editors"},"Integration with Code Editors"),(0,l.kt)("p",null,"Many code editors have extensions or plugins that can automatically run Black on your code.\nFor example, if you're using VSCode or PyCharm, you can easily integrate it into your IDE."),(0,l.kt)("h3",{id:"example-of-failed-python-black-zuul-job"},"Example of failed python-black Zuul job"),(0,l.kt)("p",null,"job-output.txt:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'[\u2026]\n2023-11-16 14:38:14.149756 | TASK [python-black : Install pip module black]\n2023-11-16 14:38:18.717886 | ubuntu-jammy | changed\n2023-11-16 14:38:18.723062 | \n2023-11-16 14:38:18.723137 | TASK [python-black : Format code with Black if there is nothing to exclude]\n2023-11-16 14:38:19.138060 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/adminer.py\n2023-11-16 14:38:19.151965 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/bird.py\n2023-11-16 14:38:19.163608 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/auditd.py\n2023-11-16 14:38:19.187772 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/cephclient/package.py\n2023-11-16 14:38:19.192695 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/cephclient/container.py\n2023-11-16 14:38:19.219694 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/cgit.py\n2023-11-16 14:38:19.230577 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/dnsdist.py\n2023-11-16 14:38:19.275681 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/hddtemp/redhat.py\n2023-11-16 14:38:19.300350 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/homer.py\n2023-11-16 14:38:19.310641 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/lldpd.py\n2023-11-16 14:38:19.318096 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/docker.py\n2023-11-16 14:38:19.329099 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/osquery.py\n2023-11-16 14:38:19.344766 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/rsyslog.py\n2023-11-16 14:38:19.358190 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/smartd.py\n2023-11-16 14:38:19.363578 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/tuned.py\n2023-11-16 14:38:19.389205 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/molecule/delegated/tests/util/util.py\n2023-11-16 14:38:19.406360 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/plugins/modules/kolla_container_facts.py\n2023-11-16 14:38:19.415046 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/plugins/filter/address.py\n2023-11-16 14:38:19.473508 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/plugins/modules/kolla_toolbox.py\n2023-11-16 14:38:19.908963 | ubuntu-jammy | would reformat /home/zuul/src/github.com/osism/ansible-collection-services/plugins/modules/kolla_docker.py\n2023-11-16 14:38:19.914395 | ubuntu-jammy |\n2023-11-16 14:38:19.914412 | ubuntu-jammy | Oh no! \xf0\u0178\u2019\xa5 \xf0\u0178\u2019\u201d \xf0\u0178\u2019\xa5\n2023-11-16 14:38:19.914419 | ubuntu-jammy | 20 files would be reformatted, 18 files would be left unchanged.\n2023-11-16 14:38:20.249358 | ubuntu-jammy | ERROR\n2023-11-16 14:38:20.249501 | ubuntu-jammy | {\n2023-11-16 14:38:20.249533 | ubuntu-jammy |   "delta": "0:00:01.053565",\n2023-11-16 14:38:20.249553 | ubuntu-jammy |   "end": "2023-11-16 14:38:19.932073",\n2023-11-16 14:38:20.249571 | ubuntu-jammy |   "msg": "non-zero return code",\n2023-11-16 14:38:20.249587 | ubuntu-jammy |   "rc": 1,\n2023-11-16 14:38:20.249603 | ubuntu-jammy |   "start": "2023-11-16 14:38:18.878508"\n2023-11-16 14:38:20.249618 | ubuntu-jammy | }\n[\u2026]\n')))}m.isMDXComponent=!0}}]);