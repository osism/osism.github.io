"use strict";(self.webpackChunkosism=self.webpackChunkosism||[]).push([[5182],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(n),u=r,k=m["".concat(s,".").concat(u)]||m[u]||c[u]||i;return n?a.createElement(k,o(o({ref:t},d),{},{components:n})):a.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9286:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_label:"Network"},o="Network",l={unversionedId:"guides/configuration-guide/commons/network",id:"guides/configuration-guide/commons/network",title:"Network",description:"The osism.commons.network role is used for the netwok configuration.",source:"@site/docs/guides/configuration-guide/commons/network.md",sourceDirName:"guides/configuration-guide/commons",slug:"/guides/configuration-guide/commons/network",permalink:"/docs/guides/configuration-guide/commons/network",draft:!1,editUrl:"https://github.com/osism/osism.github.io/tree/main/docs/guides/configuration-guide/commons/network.md",tags:[],version:"current",frontMatter:{sidebar_label:"Network"},sidebar:"tutorialSidebar",previous:{title:"Commons",permalink:"/docs/guides/configuration-guide/commons/"},next:{title:"Packages",permalink:"/docs/guides/configuration-guide/commons/packages"}},s={},p=[{value:"Netplan",id:"netplan",level:2},{value:"Example",id:"example",level:3},{value:"Dispatcher scripts",id:"dispatcher-scripts",level:3},{value:"Dummy interfaces",id:"dummy-interfaces",level:3},{value:"<code>/etc/interfaces</code>",id:"etcinterfaces",level:2}],d={toc:p},m="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"network"},"Network"),(0,r.kt)("p",null,"The osism.commons.network role is used for the netwok configuration.\n",(0,r.kt)("a",{parentName:"p",href:"https://netplan.io"},"Netplan")," is used by default. It is also possible to use the\nold ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/interfaces")," file."),(0,r.kt)("h2",{id:"netplan"},"Netplan"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Since OSISM 6.1.0, the default network type is a netplan and no longer needs to be set explicitly"',title:'"Since',OSISM:!0,"6.1.0,":!0,the:!0,default:!0,network:!0,type:!0,is:!0,a:!0,netplan:!0,and:!0,no:!0,longer:!0,needs:!0,to:!0,be:!0,set:!0,'explicitly"':!0},"network_type: netplan\n")),(0,r.kt)("p",null,"The configuration is written to ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/netplan/01-osism.yaml")," by default. Can be changed\nvia the ",(0,r.kt)("inlineCode",{parentName:"p"},"network_netplan_path")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"network_netplan_file")," parameters. The file permissions\nare ",(0,r.kt)("inlineCode",{parentName:"p"},"0600")," by default (cane be changed via the ",(0,r.kt)("inlineCode",{parentName:"p"},"network_netplan_permissions")," parameter).\nBy default, all other files in ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/netplan")," are removed. If you do not want this, you\ncan set ",(0,r.kt)("inlineCode",{parentName:"p"},"network_netplan_remove_unmanaged_files")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),". It is also possible to explicitly\nlist individual files that should not be deleted in ",(0,r.kt)("inlineCode",{parentName:"p"},"network_netplan_managed_files_extra"),"."),(0,r.kt)("p",null,"An existing ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/intefaces")," file is replaced with a placeholder file. It is not possible\nto use ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/interfaces")," and Netplan in parallel."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="This template is used as the base for the configuration"',title:'"This',template:!0,is:!0,used:!0,as:!0,the:!0,base:!0,for:!0,'configuration"':!0},"# This file describes the network interfaces available on your system\n# For more information, see netplan(5).\n---\nnetwork:\n  version: {{ network_version }}\n  renderer: {{ network_renderer }}\n\n  bonds:\n    {{ network_bonds|to_nice_yaml(indent=4)|indent(4) }}\n\n  bridges:\n    {{ network_bridges|to_nice_yaml(indent=4)|indent(4) }}\n\n  ethernets:\n    {{ network_ethernets|to_nice_yaml(indent=4)|indent(4) }}\n\n  tunnels:\n    {{ network_tunnels|to_nice_yaml(indent=4)|indent(4) }}\n\n  vlans:\n    {{ network_vlans|to_nice_yaml(indent=4)|indent(4) }}\n")),(0,r.kt)("p",null,"The parameters listed in the following table can be used in the template."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Parameter")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Default")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"network_version"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"2")),(0,r.kt)("td",{parentName:"tr",align:null},"Defines what version of the configuration format is used. The only value supported at the moment is 2.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"network_renderer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"networkd")),(0,r.kt)("td",{parentName:"tr",align:null},"Defines what network configuration tool will be used to set up your configuration. Valid values are networkd and NetworkManager.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"network_bonds"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://netplan.readthedocs.io/en/stable/netplan-yaml/#properties-for-device-type-bonds"},"https://netplan.readthedocs.io/en/stable/netplan-yaml/#properties-for-device-type-bonds"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"network_bridges"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://netplan.readthedocs.io/en/stable/netplan-yaml/#properties-for-device-type-bridges"},"https://netplan.readthedocs.io/en/stable/netplan-yaml/#properties-for-device-type-bridges"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"network_ethernets"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://netplan.readthedocs.io/en/stable/netplan-yaml/#properties-for-device-type-ethernets"},"https://netplan.readthedocs.io/en/stable/netplan-yaml/#properties-for-device-type-ethernets"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"network_tunnels"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://netplan.readthedocs.io/en/stable/netplan-yaml/#properties-for-device-type-tunnels"},"https://netplan.readthedocs.io/en/stable/netplan-yaml/#properties-for-device-type-tunnels"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"network_vlans"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://netplan.readthedocs.io/en/stable/netplan-yaml/#properties-for-device-type-vlans"},"https://netplan.readthedocs.io/en/stable/netplan-yaml/#properties-for-device-type-vlans"))))),(0,r.kt)("p",null,"Changes to the configuration are currently not applied utomatically. This is done on\npurpose to enable a manual check in advance. Changes to the network configuration can\nbe applied either by rebooting or by executing ",(0,r.kt)("inlineCode",{parentName:"p"},"netplan apply"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ osism console --type clush all\nEnter 'quit' to leave this interactive mode\nWorking with nodes: testbed-manager.testbed.osism.xyz,testbed-node-[0-2].testbed.osism.xyz\nclush> sudo netplan apply\n")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("p",null,"The Netplan documentation contains a large number of example configurations. The following\nexample shows the use of ",(0,r.kt)("a",{parentName:"p",href:"https://netplan.readthedocs.io/en/stable/examples/#how-to-create-vlans"},"How to create VLANs")," with the osism.commons.network role."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'network_ethernets:\n  mainif:\n    match:\n      macaddress: "de:ad:be:ef:ca:fe"\n    set-name: mainif\n    addresses: [ "10.3.0.5/23" ]\n    nameservers:\n      addresses: [ "8.8.8.8", "8.8.4.4" ]\n      search: [ example.com ]\n    routes:\n      - to: default\n        via: 10.3.0.1\n\nnetwork_vlans:\n  vlan15:\n    id: 15\n    link: mainif\n    addresses: [ "10.3.99.5/24" ]\n  vlan10:\n    id: 10\n    link: mainif\n    addresses: [ "10.3.98.5/24" ]\n    nameservers:\n      addresses: [ "127.0.0.1" ]\n      search: [ domain1.example.com, domain2.example.com ]\n')),(0,r.kt)("h3",{id:"dispatcher-scripts"},"Dispatcher scripts"),(0,r.kt)("h3",{id:"dummy-interfaces"},"Dummy interfaces"),(0,r.kt)("p",null,"Dummy devices are created with the help of\n",(0,r.kt)("a",{parentName:"p",href:"https://www.freedesktop.org/software/systemd/man/latest/systemd.netdev.html"},"systemd.netdev"),"\nand can then be used as a normal netowrk device in the Netplan configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"network_dummy_interfaces:\n  - dummy0\n")),(0,r.kt)("p",null,"The MTU is set to 9000 by default and can be set via ",(0,r.kt)("inlineCode",{parentName:"p"},"network_dummy_interface_mtu"),"."),(0,r.kt)("h2",{id:"etcinterfaces"},(0,r.kt)("inlineCode",{parentName:"h2"},"/etc/interfaces")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="If /etc/interfaces is to be used, the network_type must be explicitly set in environments/configuration.yml"',title:'"If',"/etc/interfaces":!0,is:!0,to:!0,be:!0,"used,":!0,the:!0,network_type:!0,must:!0,explicitly:!0,set:!0,in:!0,'environments/configuration.yml"':!0},"network_type: interfaces\n")))}c.isMDXComponent=!0}}]);