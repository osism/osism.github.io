"use strict";(self.webpackChunkosism=self.webpackChunkosism||[]).push([[5667],{2961:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"guides/operations-guide/node/index","title":"Node","description":"Change node states","source":"@site/docs/guides/operations-guide/node/index.md","sourceDirName":"guides/operations-guide/node","slug":"/guides/operations-guide/node/","permalink":"/docs/guides/operations-guide/node/","draft":false,"unlisted":false,"editUrl":"https://github.com/osism/osism.github.io/tree/main/docs/guides/operations-guide/node/index.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Node"},"sidebar":"tutorialSidebar","previous":{"title":"Network","permalink":"/docs/guides/operations-guide/network"},"next":{"title":"Package Upgrades","permalink":"/docs/guides/operations-guide/node/package-upgrades"}}');var o=s(4848),a=s(8453);const t={sidebar_label:"Node"},d="Node",r={},l=[{value:"Change node states",id:"change-node-states",level:2},{value:"Maintenance",id:"maintenance",level:3},{value:"Bootstrap",id:"bootstrap",level:3},{value:"Manage services",id:"manage-services",level:2},{value:"Manage containers",id:"manage-containers",level:2},{value:"Reboot nodes",id:"reboot-nodes",level:2},{value:"Working with the OOB Board via IPMI",id:"working-with-the-oob-board-via-ipmi",level:2},{value:"Display the IP address",id:"display-the-ip-address",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"node",children:"Node"})}),"\n",(0,o.jsx)(n.h2,{id:"change-node-states",children:"Change node states"}),"\n",(0,o.jsx)(n.p,{children:"A node can be in different states. Depending on the state, different actions\nare possible or are triggered."}),"\n",(0,o.jsx)(n.p,{children:"The individual states of a node can be retrieved via Ansible Facts and local\nfiles on the node itself."}),"\n",(0,o.jsx)(n.h3,{id:"maintenance",children:"Maintenance"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"osism set maintenance NODE\nosism noset maintenance NODE\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Ansible fact: ",(0,o.jsx)(n.code,{children:"ansible_local.osism.maintenance"})]}),"\n",(0,o.jsxs)(n.li,{children:["State file: ",(0,o.jsx)(n.code,{children:"/etc/osism/maintenance"})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"bootstrap",children:"Bootstrap"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"osism set bootstrap NODE\nosism noset bootstrap NODE\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Ansible fact: ",(0,o.jsx)(n.code,{children:"ansible_local.osism.bootstrap"})]}),"\n",(0,o.jsxs)(n.li,{children:["State file: ",(0,o.jsx)(n.code,{children:"/etc/osism/bootstrap"})]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"manage-services",children:"Manage services"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"osism apply manage-service \\\n  -e service_name=rsyslog \\\n  -e service_state=restarted\n"})}),"\n",(0,o.jsx)(n.h2,{id:"manage-containers",children:"Manage containers"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"osism apply manage-container \\\n  -e container_name=nova_compute \\\n  -e container_action=restart\n"})}),"\n",(0,o.jsx)(n.h2,{id:"reboot-nodes",children:"Reboot nodes"}),"\n",(0,o.jsx)(n.p,{children:"When using reboot play, the node is rebooted directly. It is not ensured in\nadvance that there is no more payload on the node and no services etc. are\ndisabled."}),"\n",(0,o.jsxs)(n.p,{children:["Reboot node ",(0,o.jsx)(n.code,{children:"testbed-node-0.testbed.osism.xyz"})," and wait until the reboot has\nbeen completed and the system is accessible again."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"osism apply reboot \\\n  -e reboot_wait=True \\\n  -e ireallymeanit=yes \\\n  -l testbed-node-0.testbed.osism.xyz\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Reboot node ",(0,o.jsx)(n.code,{children:"testbed-node-0.testbed.osism.xyz"})," and do not wait for the reboot\nto complete."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"osism apply reboot \\\n  -e ireallymeanit=yes \\\n  -l testbed-node-0.testbed.osism.xyz\n"})}),"\n",(0,o.jsx)(n.h2,{id:"working-with-the-oob-board-via-ipmi",children:"Working with the OOB Board via IPMI"}),"\n",(0,o.jsx)(n.h3,{id:"display-the-ip-address",children:"Display the IP address"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-console",children:"$ sudo ipmitool lan print | grep 'IP Address'\nIP Address Source       : DHCP Address\nIP Address              : 10.10.0.100\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(6540);const o={},a=i.createContext(o);function t(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);