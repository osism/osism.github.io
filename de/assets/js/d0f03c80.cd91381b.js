"use strict";(globalThis.webpackChunkosism=globalThis.webpackChunkosism||[]).push([[5095],{781:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>p,frontMatter:()=>l,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"guides/upgrade-guide/openstack","title":"OpenStack","description":"When upgrade the different OpenStack services, all containers must be","source":"@site/docs/guides/upgrade-guide/openstack.md","sourceDirName":"guides/upgrade-guide","slug":"/guides/upgrade-guide/openstack","permalink":"/de/docs/guides/upgrade-guide/openstack","draft":false,"unlisted":false,"editUrl":"https://github.com/osism/osism.github.io/tree/main/docs/guides/upgrade-guide/openstack.md","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"sidebar_label":"OpenStack","sidebar_position":40},"sidebar":"tutorialSidebar","previous":{"title":"Logging & Monitoring","permalink":"/de/docs/guides/upgrade-guide/logging-monitoring"},"next":{"title":"Baremetal","permalink":"/de/docs/guides/upgrade-guide/baremetal/"}}');var i=s(4848),r=s(8453);const l={sidebar_label:"OpenStack",sidebar_position:40},t="OpenStack",o={},d=[];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"openstack",children:"OpenStack"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"When upgrade the different OpenStack services, all containers must be\nrestarted. When restarting the API services, there is a short downtime\nof the APIs. This downtime is usually less than 1 minute."})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"OpenStack client"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"osism apply openstackclient\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Keystone"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"osism apply -a pull keystone\nosism apply -a upgrade keystone\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Glance"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"osism apply -a pull glance\nosism apply -a upgrade glance\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Designate"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"osism apply -a pull designate\nosism apply -a upgrade designate\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Placement"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"osism apply -a pull placement\nosism apply -a upgrade placement\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Cinder"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"osism apply -a pull cinder\nosism apply -a upgrade cinder\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Neutron"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"osism apply -a pull neutron\nosism apply -a upgrade neutron\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Nova"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"osism apply -a pull nova\nosism apply -a upgrade nova\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Octavia"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"osism apply -a pull octavia\nosism apply -a upgrade octavia\n"})}),"\n",(0,i.jsx)(n.p,{children:"9.1. Update amphora image"}),"\n",(0,i.jsx)(n.p,{children:"This step is only necessary if the Amphora Driver is used. If OVN is used as the driver,\nthis step is not necessary."}),"\n",(0,i.jsxs)(n.p,{children:["We provide regularly updated images for Octavia in\n",(0,i.jsx)(n.a,{href:"https://github.com/osism/openstack-octavia-amphora-image",children:"osism/openstack-octavia/amphora-image"}),".\nThe OSISM CLI can be used to upload the correct image depending on the OpenStack release\nused."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"osism manage image octavia\n"})}),"\n",(0,i.jsx)(n.p,{children:"9.2. Amphora rotation"}),"\n",(0,i.jsx)(n.p,{children:"This step is only necessary if the Amphora driver is used. If OVN is used as the driver,\nthis step is not necessary."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Horizon"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"osism apply -a pull horizon\nosism apply -a upgrade horizon\n"})}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var a=s(6540);const i={},r=a.createContext(i);function l(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);